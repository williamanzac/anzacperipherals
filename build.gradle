buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
	mavenLocal()
	maven {
		name "ANZAC Gaming"
		url "http://files.anzacgaming.co.uk/maven/repository"
	}
	maven {
		name "ANZAC Gaming snapshots"
		url "http://files.anzacgaming.co.uk/maven/repository-snapshot"
	}
	maven { // The repo from which to get waila
		name "Mobius Repo"
		url "http://mobiusstrip.eu/maven"
	}
	maven { // the repo from which to get NEI and stuff
		name 'CB Repo'
		url "http://chickenbones.net/maven/"
	}
	maven {
		name = "ic2"
		url = "http://maven.ic2.player.to/"
	}
}

apply plugin: 'forge'
apply plugin: 'maven'

version = "1.7.10-1.0"
group= "anzac.peripherals" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ANZACPeripherals"

minecraft {
    version = "1.7.10-10.13.2.1291"
    runDir = "eclipse/assets"

    // replacing stuff in the source
    replace '@VERSION@', project.version
    replace '@MC_VERSION@', version
}

dependencies {
    compile 'com.mod-buildcraft:buildcraft:6.3.5:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env
    //compile "thermalexpansion:ThermalExpansion:4.0.0B3"
    compile "codechicken:CodeChickenLib:1.7.10-1.1.1.106:dev"
    compile "codechicken:ChickenChunks:1.7.10-1.3.4.17:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.4.35:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.4.83:dev"
    compile "codechicken:EnderStorage:1.7.10-1.4.5.27:dev"
    compile "mcp.mobius.waila:Waila:1.5.8_1.7.10:dev"
    compile 'net.industrial-craft:industrialcraft-2:2.2.658-experimental:api'
}

// configure the source folders
sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            // exclude 'some exclusion'
            // include 'some inclusion'
        }
        resources {
            srcDir 'src/main/resources'
            // exclude 'some exclusion'
            // include 'some inclusion'
        }
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        // replace version and mcversion
        // ${version} and ${mcversion} are the exact strings being replaced
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    // copy everything else, that's not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

// add a source jar
task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

// because the normal output has been made to be obfuscated
task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

// --------------------
// maven section
// -------------------
// create the deployerJars dependency configuration
configurations {
    deployerJars
    docs
}

dependencies {
    // dependency in deployerJars, for maven deployment. see definition in mavenDeployer{} below
    deployerJars "org.apache.maven.wagon:wagon-ssh:2.2"
    docs "anzac:docs:0.1.16-SNAPSHOT"
}

task helpDocs(type: Javadoc) {
	title = ""
    source = sourceSets.main.java
    classpath = configurations.compile
    destinationDir = file("build/resources/main/assets/anzacperipherals/lua/anzacperipherals/help")
    options.doclet = "anzac.peripherals.help.HelpDoclet"
	options.docletpath = configurations.docs.asType(List) 
    // options.addStringOption("dir", "./help")
}

task wikiDocs(type: Javadoc) {
	title = ""
    source = sourceSets.main.java
    classpath = configurations.compile
    destinationDir = file("../anzacperipherals.wiki")
    options.doclet = "anzac.peripherals.wiki.WikiDoclet"
	options.docletpath = configurations.docs.asType(List) 
}

// make sure all of these happen when we run build
build.dependsOn sourceJar, deobfJar

assemble.dependsOn helpDocs

// specify artifacts to be uploaded
artifacts {
    // the default jar is already here by default
    archives sourceJar
    archives deobfJar
}

uploadArchives {
    // make sure this happens after reobfuscation
    dependsOn 'reobf'
    repositories {
        if (project.hasProperty("filesmaven")) { // if this is the Forge server, and this stuff is defined...
            logger.info('Publishing to files server')
            mavenDeployer {
                // specify the jars that maven needs to deploy here
                configuration = configurations.deployerJars
                // authentication, again, specially set in the forge server environment
                repository(url: project.filesmaven.url) {
                    authentication(userName: project.filesmaven.username, privateKey: project.filesmaven.key)
                }
                // here you specify all your metadata
                // this is the definition of the maven pom.xml. This is simply a DSL to define the XML. Not actual fields or things to set.
                pom {
                    groupId = project.group
                    version = project.version
                    artifactId = project.archivesBaseName
                    project {
                        name project.archivesBaseName
                        packaging 'jar'
                        description 'A Minecraft mod adding all sorts of machinery'
                        url 'http://www.anzacgaming.co.uk/'
                        scm {
                            url 'https://github.com/williamanzac/anzacperipherals'
                            connection 'scm:git:git://github.com/williamanzac/anzacperipherals.git'
                            developerConnection 'scm:git:git@github.com:williamanzac/anzacperipherals.git'
                        }
                        issueManagement {
                            system 'github'
                            url 'https://github.com/williamanzac/anzacperipherals/issues'
                        }
                        developers {
                            developer {
                                id 'williamanzac'
                                name 'WilliamAnzac'
                                roles { role 'developer' }
                            }
                        }
                    }
                }
            }
        }
    }
}